---

---

<section class="search-section">
  <div>
    <strong>
      <a class="breadcrumb" style="text-decoration: none;"></a>
    </strong>
  </div>
  <div class="search-bar">
    <svg class="search-icon" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
        <circle cx="11" cy="11" r="8"></circle>
        <line x1="21" y1="21" x2="16.65" y2="16.65"></line>
    </svg>
    <input type="text" id="input" placeholder="Search Term">
    <span
      id="results-list"
      class="style-input"
      style="display: none;"
    ></span>
  </div>
</section>


<script>

import data from '../../public/api/articles.json'

  const input = document.getElementById('input') as HTMLInputElement;
  const list = document.getElementById('results-list') as HTMLInputElement;


  input.addEventListener('input', () => {
    const query = input.value.trim().toLowerCase();
    
    list.innerHTML = `<style>
        .aElements {
            text-decoration: none;
            color: black;
            padding: 5px;
            display: inline-block;
        }

        .hover-sim {
            background-color: #393939;
            color: blue;
        }
    </style>`;

    if (query === '') {
      list.style.display = 'none';
      return;
    }

    let elements;

    if (document.documentElement.lang === "en") {
     elements = data.filter(item =>
          item['title-en'].toLowerCase().includes(query)
    );
    } else {
      elements = data.filter(item =>
          item['title-es'].toLowerCase().includes(query)
    );
    }

    function shuffleArray<T>(array: T[]): T[] {

      const copy = [...array];

      for (let i = copy.length - 1; i > 0; i--) {
        const j = Math.floor(Math.random() * (i + 1));
        [copy[i], copy[j]] = [copy[j], copy[i]]; 
      }

      return copy;
    }

    elements = shuffleArray(elements);

    const results = elements.length > 5 ? elements.slice(0, 5) : elements;
    let firstItem = true

    if (results.length > 0) {
      results.forEach(item => {
        const div = document.createElement('div');
        if (document.documentElement.lang === "en") {
          div.textContent = item['title-en'];
        }
        else{
          div.textContent = item['title-es'];
        }
        const searchIcon = document.createElement('img');
        searchIcon.setAttribute('src','/assets/images/search.svg')
        searchIcon.setAttribute('alt','o')
        searchIcon.style.width = '30px';
        searchIcon.style.height = '16px';

        const a = document.createElement('a');
        a.style = ("display: flex; align-items: center;  padding: 5px");
        a.style.margin = '0';
        if(firstItem){
          a.style.marginTop = '3px';
          firstItem = false;
        }
        a.style.cursor = 'pointer';
        a.style.textDecoration = 'none';
        a.style.color = 'inherit';

        if (document.documentElement.lang === "en") {
          a.href = '/artic?a=' + item.id + '&lang=en';
        }
        else{
          a.href = '/artic?a=' + item.id + '&lang=es';
        }

        a.addEventListener('mouseenter', () => {
          a.style.backgroundColor = '#444';
        });
        a.addEventListener('mouseleave', () => {
          a.style.backgroundColor = '';
        });

        a.classList.add("aElements");

        a.innerHTML = '';
        a.appendChild(searchIcon);
        a.appendChild(div);
        a.appendChild(document.createElement('br'));

        list.appendChild(a);

      });

      

    } else {
      const li = document.createElement('p');
      li.textContent = 'Sin resultados';
      li.style.margin = '3px';
      li.style.marginLeft = '6px';
      li.style.color = '#888';
      list.appendChild(li);
    }

    const enlaces = document.querySelectorAll('.aElements');
        let indice = 0;
        let tieneSeleccion = false;

        function actualizarHover() {
            enlaces.forEach(el => el.classList.remove('hover-sim'));
            if (tieneSeleccion) {
            enlaces[indice].classList.add('hover-sim');
            (enlaces[indice] as HTMLElement).focus();
            }
        }

        function limpiarSeleccion() {
            tieneSeleccion = false;
            indice = 0;
            enlaces.forEach(el => el.classList.remove('hover-sim'));
        }

        document.addEventListener('keydown', function (event) {
            if (event.key === 'ArrowDown' || event.key === 'ArrowUp') {
            event.preventDefault(); // ðŸ‘ˆ cancelar scroll predeterminado

            if (!tieneSeleccion) {
                indice = 0;
                tieneSeleccion = true;
                actualizarHover();
                return;
            }

            if (event.key === 'ArrowDown') {
                indice = (indice + 1) % enlaces.length;
            } else if (event.key === 'ArrowUp') {
                indice = (indice - 1 + enlaces.length) % enlaces.length;
            }

            actualizarHover();
            }

            if (event.key === 'Enter' && tieneSeleccion) {
            (enlaces[indice] as HTMLElement).click();
            }
        });

        enlaces.forEach((el, i) => {
            el.addEventListener('mouseenter', () => {
            limpiarSeleccion();
            });
        });

        document.addEventListener('click', function (event) {
            const target = event.target as Node | null;
            if (!Array.from(enlaces).some(el => el.contains(target))) {
              limpiarSeleccion();
            }
        });

        window.addEventListener('blur', limpiarSeleccion);

    list.style.display = 'inline-block';

  });

  
  document.addEventListener('click', (e) => {
    const target = e.target;
    if (target instanceof Node && !input.contains(target) && !list.contains(target)) {
      list.style.display = 'none';
    }
  });


</script>



<script>
  import json from '../text-content/static/search-section.json';

  function defineText() {
    let aText, input, aHref;

    if (document.documentElement.lang === "en") {
        aText = json.english.text;
        input = json.english.input;
        aHref = '/?lang=en';
    } else {
        aText = json.spanish.text;
        input = json.spanish.input;
        aHref = '/?lang=es';
    }

    const aElement = document.querySelector('.breadcrumb') as HTMLAnchorElement;;
    const inputElement = document.getElementById('input');

    if (aElement){
      aElement.textContent = aText;
      aElement.href = aHref;
    }
      
    if (inputElement) inputElement.setAttribute('placeholder', input);
  }

  defineText();
  const clickDiv = document.querySelector('.flags');

  if (clickDiv) {
      clickDiv.addEventListener('click', () => {
        defineText();
    });
  }

</script>


<style>

  .style-input{
    width: 236px;
    height: 162px;
    border: 1px solid #ccc;
    border-radius: 0.5rem;
    position: absolute; 
    z-index: 10;
    background-color: #fff;
    margin-top: 0.25rem ;
    max-height: 10rem;
    transform: translateY(100px); 
  }

.search-section {
    display: flex;
    align-items: center;
    justify-content: start;
    background-color: #1f2020e2;
    padding: 10px 20px;
    border-top: 1px solid white;
    border-bottom: 1px solid white;
    gap: 20px;
}

.breadcrumb {
    color: white;
    font-size: 14px;
    font-family: 'Cascadia Mono', 'Segoe UI', Arial;
}

.search-bar {
    display: flex;
    align-items: center;
    background-color: #262626;
    padding: 5px 10px;
    border-radius: 20px;
    border: 1px solid #ccc;
    width: 230px;

}

.search-bar input {
    border: none;
    outline: none;
    padding: 5px;
    font-size: 16px;
    font-family: 'Segoe UI', Arial;
    background-color: #262626;
    caret-color: white;
    color: white;
}


.search-icon {
  width: 20px;
  height: 20px;
  color: white;
  transition: color 0.3s ease;
}

#results-list{
  background-color: #2c2c2c;
  border: none;
  color: #fff;
}

/* Responsive */
@media (max-width: 330px) {
  
    .search-section {
        flex-direction: column;
        align-items: flex-start;
    }
}

@media (min-width: 1600px) {
    .search-section {
        padding: 10px 200px;
    }
}

@media (min-width: 1600px) {
    .search-section {
        padding: 10px 300px;
    }
}


</style>
