---
const { homeNative } = Astro.props;
---

<style>

  #h1 {
    padding: 5px;
    margin: 0 0 20px 0;
    font-size: 24px;
    display: flex; 
    justify-content: center
  }

  .container-home {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
    gap: 20px;
    padding: 0;
  }

  .card-home {
    background: #2e2e2e;
    border-radius: 8px;
    padding: 10px;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.4);
    color: white;
  }
  

</style>
  
<div style="align-items: center;">
  { homeNative ? 
    <h1 id="h1"></h1> 
  : 
    <h2 id="h1"></h2>
  }
</div>
<section class="container-home" id="articleContainer"></section>
  
<script>
  import json from '../text-content/static/home.json';

  function defineText() {
    let h1Text;

    if (document.documentElement.lang === "en") h1Text = json.english.h1;
    else h1Text = json.spanish.h1;
    
    const h1TextElement = document.getElementById('h1');

    if (h1TextElement) h1TextElement.textContent = h1Text;
  }

  defineText();

  let loadedCount = 0;
  const batchSize = 15;
  let allArticles: Array<any> = [];
  const container = document.getElementById('articleContainer');
  
  async function loadJSON() {
    const res = await fetch('/api/articles.json');
    allArticles = await res.json();
    allArticles = shuffleArray(allArticles);
    loadArticles();
  }

  function shuffleArray(array: Array<any>) {
    const result = array.slice();
    for (let i = result.length - 1; i > 0; i--) {
      const j = Math.floor(Math.random() * (i + 1));

      [result[i], result[j]] = [result[j], result[i]];
    }
    return result;
  }

  function loadArticles() {
    const slice = allArticles.slice(loadedCount, loadedCount + batchSize);
    slice.forEach(article => {
      const card = document.createElement('article');
      const lastVersion = article["versions"].length - 1;
      card.className = 'card-home';
      card.innerHTML = `
          <a id="${article.id}" href="/artic/?a=${article.id}&lang=${document.documentElement.lang}">
              <div class="image-placeholder-home">
                  <img src="/assets/images/posts/${article['nameFile'] || ''}-min.png" alt="${article['title-en']}" style="width: 100%; height: 100%; object-fit: cover; border-radius: 6px;" />
              </div>
              <div class="title-home" id="title${article.id}"></div>
              <div class="date-home">${article["versions"][lastVersion]['prompt-generation-date'] || '...'}</div>
          </a>
              <style>
              .image-placeholder-home {
                  background: grey;
                  border-radius: 6px;
              }
                              
              .title-home {
                  margin: 10px 0 5px;
                  font-weight: bold;
              }
          
              .date-home {
                  color: #bbb;
                  font-size: 0.9em;
                  text-align: right;
              }

              a {
                  text-decoration: none;
                  color: inherit;
              }
          </style>`;
      if (container) container.appendChild(card);
      changeTextLang();
    });
    loadedCount += slice.length;
  }

  function changeTextLang() {
    allArticles.forEach(article => {
      const aElement = document.getElementById(article.id) as HTMLElement;
      const titleElement = document.getElementById("title"+article.id) as HTMLElement;
      const lang = document.documentElement.lang;

      if (aElement) aElement.setAttribute('href',`/artic?a=${article.id}&lang=${lang}`);
      if (titleElement) titleElement.textContent = article[`title-${lang}`]
    });
  }

  window.addEventListener('scroll', () => {
    if (window.innerHeight + window.scrollY >= document.body.offsetHeight - 100) {
      if (loadedCount < allArticles.length) {
        loadArticles();
      }
    }
  });

  loadJSON();
  

  const clickDiv = document.querySelector('.flags');

  if (clickDiv) {
      clickDiv.addEventListener('click', () => {
        changeTextLang();
        defineText();
    });
  }


</script>
